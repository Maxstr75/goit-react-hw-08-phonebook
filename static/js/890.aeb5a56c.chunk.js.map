{"version":3,"file":"static/js/890.aeb5a56c.chunk.js","mappings":"6SAQMA,EAAc,WAClB,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KACMC,GAAWC,EAAAA,EAAAA,IAAYC,EAAAA,GACvBC,GAAWC,EAAAA,EAAAA,MAEXC,EAAe,SAAAC,GACnB,MAAwBA,EAAMC,cAAtBX,EAAR,EAAQA,KAAMY,EAAd,EAAcA,MAEd,OAAQZ,GACN,IAAK,OACHC,EAAQW,GACR,MAEF,IAAK,SACHT,EAAUS,KA8BVC,EAAQ,WACZZ,EAAQ,IACRE,EAAU,KAGZ,OACE,+BACE,UAACW,EAAA,EAAD,CACEC,UAAU,OACVC,SAhBe,SAAAN,GAInB,OAHAA,EAAMO,iBACNJ,IAjBkB,SAAC,GAAsB,IAApBb,EAAmB,EAAnBA,KAAME,EAAa,EAAbA,OAQ3B,GAPiBE,EAASc,MACxB,SAAAC,GAAO,OAAIA,EAAQnB,KAAKoB,gBAAkBpB,EAAKoB,kBAG/CC,EAAAA,OAAAA,QAAA,UAAkBrB,EAAlB,8BAEiBI,EAASc,MAAK,SAAAC,GAAO,OAAIA,EAAQjB,SAAWA,KAI7D,OAAOK,EAASe,EAAAA,GAAsB,CAAEtB,KAAAA,EAAME,OAAAA,KAF9CmB,EAAAA,OAAAA,QAAA,UAAkBnB,EAAlB,+BAUKqB,CAAY,CAAEvB,KAAAA,EAAME,OAAAA,KAavBsB,GAAI,CACFC,QAAS,OACTC,cAAe,SACfC,QAAS,QANb,WASE,SAACC,EAAA,EAAD,CACEC,KAAK,OACL7B,KAAK,OACL8B,MAAM,OACNC,QAAQ,yHACRC,MAAM,yIACNC,SAAUxB,EACVG,MAAOZ,EACPkC,QAAQ,WACRC,aAAa,SAEf,SAACP,EAAA,EAAD,CACEC,KAAK,MACL7B,KAAK,SACL8B,MAAM,SACNG,SAAUxB,EAEVuB,MAAM,kHACNpB,MAAOV,EACPgC,QAAQ,WACRV,GAAI,CAAEY,GAAI,EAAGC,GAAI,GACjBF,aAAa,SAEf,SAACG,EAAA,EAAD,CAAQT,KAAK,SAASK,QAAQ,YAA9B,+BAQRpC,EAAYyC,SAAW,CACrBvB,SAAUwB,IAAAA,KAAAA,YAGZ,S,+OC7BA,EArEsB,SAAC,GAA+C,IAA7CC,EAA4C,EAA5CA,GAAIC,EAAwC,EAAxCA,YAAaC,EAA2B,EAA3BA,SAAUC,EAAiB,EAAjBA,WAClD,GAAwB7C,EAAAA,EAAAA,UAAS4C,GAAjC,eAAO3C,EAAP,KAAaC,EAAb,KACA,GAA4BF,EAAAA,EAAAA,UAAS6C,GAArC,eAAO1C,EAAP,KAAeC,EAAf,KAEMI,GAAWC,EAAAA,EAAAA,MAEXC,EAAe,SAAAC,GACnB,MAAwBA,EAAMC,cAAtBX,EAAR,EAAQA,KAAMY,EAAd,EAAcA,MAEd,OAAQZ,GACN,IAAK,OACHC,EAAQW,GACR,MAEF,IAAK,SACHT,EAAUS,GACV,MAEF,QACE,SAYN,OACE,UAACE,EAAA,EAAD,CACEC,UAAU,OACVC,SAZiB,SAAAN,GAEnB,GADAA,EAAMO,iBACc,KAAhBjB,EAAK6C,QAAmC,KAAlB3C,EAAO2C,OAKjC,OADAtC,GAASuC,EAAAA,EAAAA,IAAc,CAAEL,GAAAA,EAAIvC,OAAAA,EAAQF,KAAAA,KAC9B0C,GAAY,GAJjBrB,EAAAA,OAAAA,QAAe,uBAUfG,GAAI,CACFC,QAAS,OACTC,cAAe,SACfC,QAAS,QANb,WASE,SAACoB,EAAA,EAAD,CAAYb,QAAQ,KAAKnB,UAAU,KAAKS,GAAI,CAAEY,GAAI,GAAlD,2BAGA,SAACR,EAAA,EAAD,CACEC,KAAK,OACL7B,KAAK,OACL8B,MAAM,OACNG,SAAUxB,EACVG,MAAOZ,EACPkC,QAAQ,WACRC,aAAa,SAEf,SAACP,EAAA,EAAD,CACEC,KAAK,MACL7B,KAAK,SACL8B,MAAM,SACNG,SAAUxB,EACVG,MAAOV,EACPgC,QAAQ,WACRV,GAAI,CAAEY,GAAI,EAAGC,GAAI,GACjBF,aAAa,SAEf,SAACG,EAAA,EAAD,CAAQT,KAAK,SAASK,QAAQ,YAA9B,6BCxDAc,EAAQ,CACZC,SAAU,WACVC,IAAK,MACLC,KAAM,MACNC,UAAW,wBACXC,MAAO,IACPC,QAAS,mBACTC,OAAQ,iBACRC,UAAW,GACXC,EAAG,GAsFL,EApFoB,SAAC,GAA4C,IAA1CzD,EAAyC,EAAzCA,KAAME,EAAmC,EAAnCA,OAAQuC,EAA2B,EAA3BA,GAAIiB,EAAuB,EAAvBA,iBACvC,EAAwBC,EAAAA,UAAe,GAAvC,eAAOC,EAAP,KAAaC,EAAb,KAIMC,GAAOC,EAAAA,EAAAA,IAAOC,EAAAA,EAAPD,EAAc,gBAAGE,EAAH,EAAGA,MAAH,eAAC,QAC1BC,gBAAwC,SAAvBD,EAAME,QAAQC,KAAkB,UAAY,QAC1DH,EAAMI,WAAWC,OAFK,IAGzB3C,QAASsC,EAAMM,QAAQ,GACvBC,UAAW,SACXC,MAAOR,EAAME,QAAQO,KAAKC,eAE5B,OACE,+BACE,UAACb,EAAD,CACE/C,UAAU,KACVS,GAAI,CACFoD,UAAW,OACXnD,QAAS,OACToD,eAAgB,gBAChBlD,QAAS,EACTmD,WAAY,SACZL,MAAO,SARX,WAWE,UAAC3D,EAAA,EAAD,CACEU,GAAI,CACFuD,SAAU,IACVC,SAAU,IACVR,UAAW,SACXM,WAAY,UALhB,WAQE,UAAC/B,EAAA,EAAD,CACEb,QAAQ,QACRnB,UAAU,KACVS,GAAI,CAAEyD,SAAU,UAHlB,UAKGjF,EALH,QAOA,SAAC+C,EAAA,EAAD,CACEb,QAAQ,QACRnB,UAAU,KACVS,GAAI,CAAEyD,SAAU,UAHlB,SAKG/E,QAGL,UAACY,EAAA,EAAD,CAAKU,GAAI,CAAEC,QAAS,QAApB,WACE,UAACX,EAAA,EAAD,CAAKU,GAAI,CAAE0D,YAAa,GAAxB,WACE,SAAC5C,EAAA,EAAD,CAAQJ,QAAQ,WAAWiD,QAhDlB,kBAAMtB,GAAQ,IAgDvB,UACE,SAACuB,EAAA,EAAD,OAEF,SAACC,EAAA,EAAD,CAAOzB,KAAMA,EAAM0B,QAlDT,kBAAMzB,GAAQ,IAkDxB,UACE,SAAC/C,EAAA,EAAD,CAAKU,GAAIwB,EAAT,UACE,SAAC,EAAD,CACEP,GAAIA,EACJC,YAAamB,EACblB,SAAU3C,EACV4C,WAAY1C,YAKpB,SAACoC,EAAA,EAAD,CACEJ,QAAQ,WACRiD,QAAS,kBAAMzB,EAAiBjB,IAChC8C,WAAW,SAACC,EAAA,EAAD,IAHb,6B,0FCtFJC,EAAY,CAAC,YAAa,YAAa,UAAW,UAAW,YAiBnE,SAASC,EAAaC,EAAUC,GAC9B,IAAMC,EAAgBlC,EAAAA,SAAAA,QAAuBgC,GAAUG,OAAOC,SAC9D,OAAOF,EAAcG,QAAO,SAACC,EAAQC,EAAOC,GAS1C,OARAF,EAAOG,KAAKF,GAERC,EAAQN,EAAcQ,OAAS,GACjCJ,EAAOG,KAAmBzC,EAAAA,aAAmBiC,EAAW,CACtDU,IAAK,aAAF,OAAeH,MAIfF,IACN,IAGL,IAuEMM,GAAYxC,EAAAA,EAAAA,IAAO,MAAO,CAC9B/D,KAAM,WACNwG,KAAM,OACNC,kBAAmB,SAACC,EAAOC,GACzB,MAAO,CAACA,EAAOC,QAJD7C,EA9DG,SAAC,GAGhB,IAFJ8C,EAEI,EAFJA,WACA5C,EACI,EADJA,MAEI0C,GAASG,EAAAA,EAAAA,GAAS,CACpBrF,QAAS,OACTC,cAAe,WACdqF,EAAAA,EAAAA,IAAkB,CACnB9C,MAAAA,IACC+C,EAAAA,EAAAA,IAAwB,CACzBC,OAAQJ,EAAWK,UACnBC,YAAalD,EAAMkD,YAAYF,UAC7B,SAAAG,GAAS,MAAK,CAChB1F,cAAe0F,OAGjB,GAAIP,EAAWtC,QAAS,CACtB,IAAM8C,GAAcC,EAAAA,EAAAA,IAAmBrD,GACjCsD,EAAOC,OAAOC,KAAKxD,EAAMkD,YAAYF,QAAQjB,QAAO,SAAC0B,EAAKC,GAK9D,OAJkC,kBAAvBd,EAAWtC,SAA0D,MAAlCsC,EAAWtC,QAAQoD,IAAuD,kBAAzBd,EAAWK,WAA8D,MAApCL,EAAWK,UAAUS,MACvJD,EAAIC,IAAc,GAGbD,IACN,IACGE,GAAkBZ,EAAAA,EAAAA,IAAwB,CAC9CC,OAAQJ,EAAWK,UACnBK,KAAAA,IAEIM,GAAgBb,EAAAA,EAAAA,IAAwB,CAC5CC,OAAQJ,EAAWtC,QACnBgD,KAAAA,IAG6B,kBAApBK,GACTJ,OAAOC,KAAKG,GAAiBE,SAAQ,SAACH,EAAYxB,EAAOgB,GAGvD,IAFuBS,EAAgBD,GAElB,CACnB,IAAMI,EAAyB5B,EAAQ,EAAIyB,EAAgBT,EAAYhB,EAAQ,IAAM,SACrFyB,EAAgBD,GAAcI,MAcpCpB,GAASqB,EAAAA,EAAAA,GAAUrB,GAAQI,EAAAA,EAAAA,IAAkB,CAC3C9C,MAAAA,GACC4D,GAXwB,SAACT,EAAWO,GACrC,MAAO,CACL,yCACEM,OAAQ,GADV,iBAxDqBf,EA0DYS,EAAaC,EAAgBD,GAAcd,EAAWK,UAzDtF,CACLgB,IAAK,OACL,cAAe,QACfC,OAAQ,MACR,iBAAkB,UAClBjB,MAoD0GkB,EAAAA,EAAAA,IAASf,EAAaD,KA1DvG,IAAAF,MAqE3B,OADAP,GAAS0B,EAAAA,EAAAA,IAAwBpE,EAAMkD,YAAaR,MAUhD2B,EAAqB3E,EAAAA,YAAiB,SAAe4E,EAASC,GAClE,IAAMC,GAAaC,EAAAA,EAAAA,GAAc,CAC/BhC,MAAO6B,EACPvI,KAAM,aAEF0G,GAAQiC,EAAAA,EAAAA,GAAaF,GAE3B,EAMI/B,EALF3F,UAAAA,OADF,MACc,MADd,IAMI2F,EAJFQ,UAAAA,OAFF,MAEc,SAFd,IAMIR,EAHFnC,QAAAA,OAHF,MAGY,EAHZ,EAIEqE,EAEElC,EAFFkC,QACAjD,EACEe,EADFf,SAEIkD,GAAQC,EAAAA,EAAAA,GAA8BpC,EAAOjB,GAE7CoB,EAAa,CACjBK,UAAAA,EACA3C,QAAAA,GAEF,OAAoBwE,EAAAA,EAAAA,KAAKxC,GAAWO,EAAAA,EAAAA,GAAS,CAC3CkC,GAAIjI,EACJ8F,WAAYA,EACZ2B,IAAKA,GACJK,EAAO,CACRlD,SAAUiD,EAAUlD,EAAaC,EAAUiD,GAAWjD,QA6C1D,ICtHA,EApDoB,WAClB,IAAMvF,GAAWC,EAAAA,EAAAA,IAAYC,EAAAA,GACvBwF,GAASzF,EAAAA,EAAAA,IAAY4I,EAAAA,GAErB1I,GAAWC,EAAAA,EAAAA,MACX0I,EAAiB,SAAAC,GACrB5I,EAASe,EAAAA,GAAyB6H,MAGpCC,EAAAA,EAAAA,YAAU,WACR7I,EAASe,EAAAA,QACR,CAACf,IAEJ8I,QAAQC,IAAIlJ,GAGZ,IAOMmJ,EAPiB,WACrB,IAAMC,EAAmB1D,EAAO1E,cAChC,OAAOhB,EAAS0F,QAAO,qBAAG9F,KACnBoB,cAAcqI,SAASD,MAIRE,GAExB,OACE,SAAC,EAAD,CAAO3I,UAAU,KAAKS,GAAI,CAAEG,QAAS,GAAK4C,QAAS,EAAnD,SACGgF,GACCA,EAAgBI,KAAI,gBAAGlH,EAAH,EAAGA,GAAIzC,EAAP,EAAOA,KAAME,EAAb,EAAaA,OAAb,OAClB,SAAC,EAAD,CAEEuC,GAAIA,EACJzC,KAAMA,EACNE,OAAQA,EACRwD,iBAAkBwF,GAJbzG,U,oICJjB,EA/Be,WACb,IAAMlC,GAAWC,EAAAA,EAAAA,MACXsF,GAASzF,EAAAA,EAAAA,IAAY4I,EAAAA,GAM3B,OACE,+BACE,SAACrH,EAAA,EAAD,CACEM,QAAQ,WACRL,KAAK,OACL7B,KAAK,SACL8B,MAAM,wBACNlB,MAAOkF,EACP7D,SAZe,SAAAvB,GACnBH,EAASqJ,EAAAA,GAAqBlJ,EAAMC,cAAcC,SAY9CY,GAAI,CACFY,GAAI,EACJC,GAAI,S,+GCxBNvC,EAAgB+J,EAAQ,MAAxB/J,YACSgK,EAAgBD,EAAQ,MAAjCE,QACSC,EAAWH,EAAQ,MAA5BE,QAoBR,EAlBqB,WACnB,OACE,iCACE,UAACjJ,EAAA,EAAD,CAAKU,GAAI,CAAEY,GAAI,GAAf,WACE,SAACW,EAAA,EAAD,CAAYb,QAAQ,KAAKnB,UAAU,KAAnC,wBAGA,SAACjB,EAAD,QAEF,SAACiD,EAAA,EAAD,CAAYb,QAAQ,KAAKnB,UAAU,KAAnC,UACE,8CAEF,SAACiJ,EAAD,KACA,SAACF,EAAD,S,yFCnBN,IAAMxJ,EAAqB,SAAA2J,GAAK,OAAIA,EAAM7J,SAAS8J,OAC7CjB,EAAsB,SAAAgB,GAAK,OAAIA,EAAM7J,SAAS0F,S,sCCChDqE,EAAyBN,EAAQ,MAKrCO,EAAQ,OAAU,EAElB,IAAIC,EAAiBF,EAAuBN,EAAQ,OAEhDS,EAAcT,EAAQ,KAEtBU,GAAW,EAAIF,EAAeN,UAAuB,EAAIO,EAAYE,KAAK,OAAQ,CACpFC,EAAG,kFACD,UAEJL,EAAQ,EAAUG,G,sCCfdJ,EAAyBN,EAAQ,MAKrCO,EAAQ,OAAU,EAElB,IAAIC,EAAiBF,EAAuBN,EAAQ,OAEhDS,EAAcT,EAAQ,KAEtBU,GAAW,EAAIF,EAAeN,UAAuB,EAAIO,EAAYE,KAAK,OAAQ,CACpFC,EAAG,yJACD,QAEJL,EAAQ,EAAUG,G,iCCRlB,IAAIG,EAAuBb,EAAQ,MAEnC,SAASc,KACT,SAASC,KACTA,EAAuBC,kBAAoBF,EAE3CG,EAAOV,QAAU,WACf,SAASW,EAAKrE,EAAOsE,EAAUC,EAAeC,EAAUC,EAAcC,GACpE,GAAIA,IAAWV,EAAf,CAIA,IAAIW,EAAM,IAAIC,MACZ,mLAKF,MADAD,EAAIrL,KAAO,sBACLqL,GAGR,SAASE,IACP,OAAOR,EAFTA,EAAKS,WAAaT,EAMlB,IAAIU,EAAiB,CACnBC,MAAOX,EACPY,OAAQZ,EACRa,KAAMb,EACNc,KAAMd,EACN7K,OAAQ6K,EACRe,OAAQf,EACRgB,OAAQhB,EACRiB,OAAQjB,EAERkB,IAAKlB,EACLmB,QAASX,EACTY,QAASpB,EACTqB,YAAarB,EACbsB,WAAYd,EACZe,KAAMvB,EACNwB,SAAUhB,EACViB,MAAOjB,EACPkB,UAAWlB,EACXmB,MAAOnB,EACPoB,MAAOpB,EAEPqB,eAAgBhC,EAChBC,kBAAmBF,GAKrB,OAFAc,EAAejJ,UAAYiJ,EAEpBA,I,qBC9CPX,EAAOV,QAAUP,EAAQ,IAARA,I,8BCNnBiB,EAAOV,QAFoB","sources":["components/ContactForm/ContactForm.jsx","components/UpdateContact/UpdateContact.jsx","components/ContactItem/ContactItem.jsx","../node_modules/@mui/material/Stack/Stack.js","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","pages/ContactsPage/ContactsPage.jsx","redux/contacts/contactsSelectors.js","../node_modules/@mui/icons-material/Delete.js","../node_modules/@mui/icons-material/Edit.js","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getItemsValueState } from 'redux/contacts/contactsSelectors';\nimport * as operations from 'redux/contacts/contactsOperations';\nimport { Button, Box, TextField } from '@mui/material';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const contacts = useSelector(getItemsValueState);\n  const dispatch = useDispatch();\n\n  const handleChange = event => {\n    const { name, value } = event.currentTarget;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const addContacts = ({ name, number }) => {\n    const findName = contacts.find(\n      contact => contact.name.toLowerCase() === name.toLowerCase()\n    );\n    if (findName) {\n      Notify.failure(`${name} is already in contacts.`);\n    }\n    const findNumber = contacts.find(contact => contact.number === number);\n    if (findNumber) {\n      Notify.failure(`${number} number is already in use.`);\n    } else {\n      return dispatch(operations.addContact({ name, number }));\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    reset();\n\n    return addContacts({ name, number });\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <>\n      <Box\n        component=\"form\"\n        onSubmit={handleSubmit}\n        sx={{\n          display: 'flex',\n          flexDirection: 'column',\n          padding: '15px',\n        }}\n      >\n        <TextField\n          type=\"text\"\n          name=\"name\"\n          label=\"Name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          onChange={handleChange}\n          value={name}\n          variant=\"outlined\"\n          autoComplete=\"off\"\n        />\n        <TextField\n          type=\"tel\"\n          name=\"number\"\n          label=\"Number\"\n          onChange={handleChange}\n          // pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\n          title=\"The phone number must be 13 digits long and may contain numbers, spaces, dashes, paunches, and may begin with +\"\n          value={number}\n          variant=\"outlined\"\n          sx={{ mb: 2, mt: 2 }}\n          autoComplete=\"off\"\n        />\n        <Button type=\"submit\" variant=\"contained\">\n          Add contact\n        </Button>\n      </Box>\n    </>\n  );\n};\n\nContactForm.porTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default ContactForm;\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { updateContact } from 'redux/contacts/contactsOperations';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { Box, Typography, TextField, Button } from '@mui/material';\n\nconst UpdateContact = ({ id, changeModal, UserName, UserNumber }) => {\n  const [name, setName] = useState(UserName);\n  const [number, setNumber] = useState(UserNumber);\n\n  const dispatch = useDispatch();\n\n  const handleChange = event => {\n    const { name, value } = event.currentTarget;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (name.trim() === '' || number.trim() === '') {\n      Notify.failure('Fill in the fields');\n      return;\n    }\n    dispatch(updateContact({ id, number, name }));\n    return changeModal(false);\n  };\n  return (\n    <Box\n      component=\"form\"\n      onSubmit={handleSubmit}\n      sx={{\n        display: 'flex',\n        flexDirection: 'column',\n        padding: '15px',\n      }}\n    >\n      <Typography variant=\"h6\" component=\"h2\" sx={{ mb: 2 }}>\n        Edit Contact\n      </Typography>\n      <TextField\n        type=\"text\"\n        name=\"name\"\n        label=\"Name\"\n        onChange={handleChange}\n        value={name}\n        variant=\"outlined\"\n        autoComplete=\"off\"\n      />\n      <TextField\n        type=\"tel\"\n        name=\"number\"\n        label=\"Number\"\n        onChange={handleChange}\n        value={number}\n        variant=\"outlined\"\n        sx={{ mb: 2, mt: 2 }}\n        autoComplete=\"off\"\n      />\n      <Button type=\"submit\" variant=\"contained\">\n        Add contact\n      </Button>\n    </Box>\n  );\n};\nexport default UpdateContact;\n","import DeleteIcon from '@mui/icons-material/Delete';\nimport EditIcon from '@mui/icons-material/Edit';\nimport { Paper } from '@mui/material';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport Modal from '@mui/material/Modal';\nimport { styled } from '@mui/material/styles';\nimport Typography from '@mui/material/Typography';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\n\nimport UpdateContact from 'components/UpdateContact/UpdateContact';\n\nconst style = {\n  position: 'absolute',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  width: 400,\n  bgcolor: 'background.paper',\n  border: '2px solid #000',\n  boxShadow: 24,\n  p: 4,\n};\nconst ContactItem = ({ name, number, id, onDeleteContacts }) => {\n  const [open, setOpen] = React.useState(false);\n  const handleOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n\n  const Item = styled(Paper)(({ theme }) => ({\n    backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\n    ...theme.typography.body2,\n    padding: theme.spacing(1),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  }));\n  return (\n    <>\n      <Item\n        component=\"li\"\n        sx={{\n          listStyle: 'none',\n          display: 'flex',\n          justifyContent: 'space-between',\n          padding: 2,\n          alignItems: 'center',\n          color: 'black',\n        }}\n      >\n        <Box\n          sx={{\n            minWidth: 100,\n            maxWidth: 170,\n            textAlign: 'center',\n            alignItems: 'center',\n          }}\n        >\n          <Typography\n            variant=\"body1\"\n            component=\"h2\"\n            sx={{ overflow: 'hidden' }}\n          >\n            {name}:\n          </Typography>\n          <Typography\n            variant=\"body1\"\n            component=\"h2\"\n            sx={{ overflow: 'hidden' }}\n          >\n            {number}\n          </Typography>\n        </Box>\n        <Box sx={{ display: 'flex' }}>\n          <Box sx={{ marginRight: 1 }}>\n            <Button variant=\"outlined\" onClick={handleOpen}>\n              <EditIcon />\n            </Button>\n            <Modal open={open} onClose={handleClose}>\n              <Box sx={style}>\n                <UpdateContact\n                  id={id}\n                  changeModal={setOpen}\n                  UserName={name}\n                  UserNumber={number}\n                />\n              </Box>\n            </Modal>\n          </Box>\n          <Button\n            variant=\"outlined\"\n            onClick={() => onDeleteContacts(id)}\n            startIcon={<DeleteIcon />}\n          >\n            Delete\n          </Button>\n        </Box>\n      </Item>\n    </>\n  );\n};\n\nContactItem.propTypes = {\n  id: PropTypes.any,\n  name: PropTypes.string,\n  number: PropTypes.string,\n  onDeleteContacts: PropTypes.func,\n};\n\nexport default ContactItem;\n","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"component\", \"direction\", \"spacing\", \"divider\", \"children\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { createUnarySpacing, getValue, handleBreakpoints, mergeBreakpointsInOrder, unstable_extendSxProp as extendSxProp, unstable_resolveBreakpointValues as resolveBreakpointValues } from '@mui/system';\nimport { deepmerge } from '@mui/utils';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\n/**\n * Return an array with the separator React element interspersed between\n * each React node of the input children.\n *\n * > joinChildren([1,2,3], 0)\n * [1,0,2,0,3]\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction joinChildren(children, separator) {\n  const childrenArray = React.Children.toArray(children).filter(Boolean);\n  return childrenArray.reduce((output, child, index) => {\n    output.push(child);\n\n    if (index < childrenArray.length - 1) {\n      output.push( /*#__PURE__*/React.cloneElement(separator, {\n        key: `separator-${index}`\n      }));\n    }\n\n    return output;\n  }, []);\n}\n\nconst getSideFromDirection = direction => {\n  return {\n    row: 'Left',\n    'row-reverse': 'Right',\n    column: 'Top',\n    'column-reverse': 'Bottom'\n  }[direction];\n};\n\nexport const style = ({\n  ownerState,\n  theme\n}) => {\n  let styles = _extends({\n    display: 'flex',\n    flexDirection: 'column'\n  }, handleBreakpoints({\n    theme\n  }, resolveBreakpointValues({\n    values: ownerState.direction,\n    breakpoints: theme.breakpoints.values\n  }), propValue => ({\n    flexDirection: propValue\n  })));\n\n  if (ownerState.spacing) {\n    const transformer = createUnarySpacing(theme);\n    const base = Object.keys(theme.breakpoints.values).reduce((acc, breakpoint) => {\n      if (typeof ownerState.spacing === 'object' && ownerState.spacing[breakpoint] != null || typeof ownerState.direction === 'object' && ownerState.direction[breakpoint] != null) {\n        acc[breakpoint] = true;\n      }\n\n      return acc;\n    }, {});\n    const directionValues = resolveBreakpointValues({\n      values: ownerState.direction,\n      base\n    });\n    const spacingValues = resolveBreakpointValues({\n      values: ownerState.spacing,\n      base\n    });\n\n    if (typeof directionValues === 'object') {\n      Object.keys(directionValues).forEach((breakpoint, index, breakpoints) => {\n        const directionValue = directionValues[breakpoint];\n\n        if (!directionValue) {\n          const previousDirectionValue = index > 0 ? directionValues[breakpoints[index - 1]] : 'column';\n          directionValues[breakpoint] = previousDirectionValue;\n        }\n      });\n    }\n\n    const styleFromPropValue = (propValue, breakpoint) => {\n      return {\n        '& > :not(style) + :not(style)': {\n          margin: 0,\n          [`margin${getSideFromDirection(breakpoint ? directionValues[breakpoint] : ownerState.direction)}`]: getValue(transformer, propValue)\n        }\n      };\n    };\n\n    styles = deepmerge(styles, handleBreakpoints({\n      theme\n    }, spacingValues, styleFromPropValue));\n  }\n\n  styles = mergeBreakpointsInOrder(theme.breakpoints, styles);\n  return styles;\n};\nconst StackRoot = styled('div', {\n  name: 'MuiStack',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    return [styles.root];\n  }\n})(style);\nconst Stack = /*#__PURE__*/React.forwardRef(function Stack(inProps, ref) {\n  const themeProps = useThemeProps({\n    props: inProps,\n    name: 'MuiStack'\n  });\n  const props = extendSxProp(themeProps);\n\n  const {\n    component = 'div',\n    direction = 'column',\n    spacing = 0,\n    divider,\n    children\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = {\n    direction,\n    spacing\n  };\n  return /*#__PURE__*/_jsx(StackRoot, _extends({\n    as: component,\n    ownerState: ownerState,\n    ref: ref\n  }, other, {\n    children: divider ? joinChildren(children, divider) : children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Stack.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Defines the `flex-direction` style property.\n   * It is applied for all screen sizes.\n   * @default 'column'\n   */\n  direction: PropTypes.oneOfType([PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row']), PropTypes.arrayOf(PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row'])), PropTypes.object]),\n\n  /**\n   * Add an element between each child.\n   */\n  divider: PropTypes.node,\n\n  /**\n   * Defines the space between immediate children.\n   * @default 0\n   */\n  spacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n\n  /**\n   * The system prop, which allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Stack;","import PropTypes from 'prop-types';\nimport ContactItem from 'components/ContactItem/ContactItem';\n// import { List } from './ContactList.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  getItemsValueState,\n  getFilterValueState,\n} from 'redux/contacts/contactsSelectors';\nimport * as operations from 'redux/contacts/contactsOperations';\nimport { useEffect } from 'react';\nimport Stack from '@mui/material/Stack';\n\nconst ContactList = () => {\n  const contacts = useSelector(getItemsValueState);\n  const filter = useSelector(getFilterValueState);\n\n  const dispatch = useDispatch();\n  const deleteContacts = contactsId => {\n    dispatch(operations.deleteContact(contactsId));\n  };\n\n  useEffect(() => {\n    dispatch(operations.fetchContact());\n  }, [dispatch]);\n\n  console.log(contacts);\n\n  // Возвращает результат фильтра\n  const filterContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  const visibleContacts = filterContacts();\n\n  return (\n    <Stack component=\"ul\" sx={{ padding: 0 }} spacing={1}>\n      {visibleContacts &&\n        visibleContacts.map(({ id, name, number }) => (\n          <ContactItem\n            key={id}\n            id={id}\n            name={name}\n            number={number}\n            onDeleteContacts={deleteContacts}\n          />\n        ))}\n    </Stack>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      phone: PropTypes.string.isRequired,\n    })\n  ),\n  onDeleteContact: PropTypes.func,\n};\n\nexport default ContactList;\n","import PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getFilterValueState } from 'redux/contacts/contactsSelectors';\n// import { Input, Label } from './Filter.styled';\nimport * as actions from '../../redux/contacts/contactsActions';\nimport TextField from '@mui/material/TextField';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(getFilterValueState);\n\n  const handleFilter = event => {\n    dispatch(actions.handleFilter(event.currentTarget.value));\n  };\n\n  return (\n    <>\n      <TextField\n        variant=\"outlined\"\n        type=\"text\"\n        name=\"filter\"\n        label=\"Find contacts by name\"\n        value={filter}\n        onChange={handleFilter}\n        sx={{\n          mb: 2,\n          mt: 2,\n        }}\n      />\n    </>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n\nexport default Filter;\n","import { Box, Typography } from '@mui/material';\n\nconst { ContactForm } = require('components/ContactForm');\nconst { default: ContactList } = require('components/ContactList');\nconst { default: Filter } = require('components/Filter');\n\nconst ContactsPage = () => {\n  return (\n    <>\n      <Box sx={{ mb: 5 }}>\n        <Typography variant=\"h6\" component=\"h2\">\n          Phonebook\n        </Typography>\n        <ContactForm />\n      </Box>\n      <Typography variant=\"h6\" component=\"h2\">\n        <>Contacts</>\n      </Typography>\n      <Filter />\n      <ContactList />\n    </>\n  );\n};\n\nexport default ContactsPage;\n","const getItemsValueState = state => state.contacts.items;\nconst getFilterValueState = state => state.contacts.filter;\n\nexport { getItemsValueState, getFilterValueState };\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 0 0-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"\n}), 'Edit');\n\nexports.default = _default;","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n"],"names":["ContactForm","useState","name","setName","number","setNumber","contacts","useSelector","getItemsValueState","dispatch","useDispatch","handleChange","event","currentTarget","value","reset","Box","component","onSubmit","preventDefault","find","contact","toLowerCase","Notify","operations","addContacts","sx","display","flexDirection","padding","TextField","type","label","pattern","title","onChange","variant","autoComplete","mb","mt","Button","porTypes","PropTypes","id","changeModal","UserName","UserNumber","trim","updateContact","Typography","style","position","top","left","transform","width","bgcolor","border","boxShadow","p","onDeleteContacts","React","open","setOpen","Item","styled","Paper","theme","backgroundColor","palette","mode","typography","body2","spacing","textAlign","color","text","secondary","listStyle","justifyContent","alignItems","minWidth","maxWidth","overflow","marginRight","onClick","Edit","Modal","onClose","startIcon","Delete","_excluded","joinChildren","children","separator","childrenArray","filter","Boolean","reduce","output","child","index","push","length","key","StackRoot","slot","overridesResolver","props","styles","root","ownerState","_extends","handleBreakpoints","resolveBreakpointValues","values","direction","breakpoints","propValue","transformer","createUnarySpacing","base","Object","keys","acc","breakpoint","directionValues","spacingValues","forEach","previousDirectionValue","deepmerge","margin","row","column","getValue","mergeBreakpointsInOrder","Stack","inProps","ref","themeProps","useThemeProps","extendSxProp","divider","other","_objectWithoutPropertiesLoose","_jsx","as","getFilterValueState","deleteContacts","contactsId","useEffect","console","log","visibleContacts","normalizedFilter","includes","filterContacts","map","actions","require","ContactList","default","Filter","state","items","_interopRequireDefault","exports","_createSvgIcon","_jsxRuntime","_default","jsx","d","ReactPropTypesSecret","emptyFunction","emptyFunctionWithReset","resetWarningCache","module","shim","propName","componentName","location","propFullName","secret","err","Error","getShim","isRequired","ReactPropTypes","array","bigint","bool","func","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes"],"sourceRoot":""}