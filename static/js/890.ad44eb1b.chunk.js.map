{"version":3,"file":"static/js/890.ad44eb1b.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/UpdateContact/UpdateContact.jsx","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","pages/ContactsPage/ContactsPage.jsx","redux/contacts/contactsSelectors.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  max-width: 360px;\n  border-radius: 5px;\n  padding: 10px;\n  background-color: tomato;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 20px;\n`;\n\nexport const Input = styled.input`\n  width: 200px;\n  margin-top: 2px;\n`;\n\nexport const Button = styled.button`\n  cursor: pointer;\n`;\n","import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getItemsValueState } from 'redux/contacts/contactsSelectors';\nimport * as operations from 'redux/contacts/contactsOperations';\nimport { Button, Form, Input, Label } from './ContactForm.styled';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const contacts = useSelector(getItemsValueState);\n  const dispatch = useDispatch();\n\n  const handleChange = event => {\n    const { name, value } = event.currentTarget;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const addContacts = ({ name, number }) => {\n    const findName = contacts.find(\n      contact => contact.name.toLowerCase() === name.toLowerCase()\n    );\n    if (findName) {\n      Notify.failure(`${name} is already in contacts.`);\n    }\n    const findNumber = contacts.find(contact => contact.number === number);\n    if (findNumber) {\n      Notify.failure(`${number} number is already in use.`);\n    } else {\n      return dispatch(operations.addContact({ name, number }));\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    reset();\n\n    return addContacts({ name, number });\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <Form onSubmit={handleSubmit} autoComplete=\"on\">\n      <Label>\n        Name\n        <Input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleChange}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </Label>\n\n      <Label>\n        Number\n        <Input\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={handleChange}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </Label>\n      <Button type=\"submit\">Add contact</Button>\n    </Form>\n  );\n};\n\nContactForm.porTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default ContactForm;\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { updateContact } from 'redux/contacts/contactsOperations';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { Box, Typography, TextField, Button } from '@mui/material';\n\nconst UpdateContact = ({ id, changeModal, UserName, UserNumber }) => {\n  const [name, setName] = useState(UserName);\n  const [number, setNumber] = useState(UserNumber);\n\n  const dispatch = useDispatch();\n\n  const handleChange = event => {\n    const { name, value } = event.currentTarget;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (name.trim() === '' || number.trim() === '') {\n      Notify.failure('Fill in the fields');\n      return;\n    }\n    dispatch(updateContact({ id, number, name }));\n    return changeModal(false);\n  };\n  return (\n    <Box\n      component=\"form\"\n      onSubmit={handleSubmit}\n      sx={{\n        display: 'flex',\n        flexDirection: 'column',\n        padding: '15px',\n      }}\n    >\n      <Typography variant=\"h6\" component=\"h2\" sx={{ mb: 2 }}>\n        Edit Contact\n      </Typography>\n      <TextField\n        type=\"text\"\n        name=\"name\"\n        label=\"Name\"\n        onChange={handleChange}\n        value={name}\n        variant=\"outlined\"\n        autoComplete=\"off\"\n      />\n      <TextField\n        type=\"tel\"\n        name=\"number\"\n        label=\"Number\"\n        onChange={handleChange}\n        value={number}\n        variant=\"outlined\"\n        sx={{ mb: 2, mt: 2 }}\n        autoComplete=\"off\"\n      />\n      <Button type=\"submit\" variant=\"contained\">\n        Add contact\n      </Button>\n    </Box>\n  );\n};\nexport default UpdateContact;\n","import DeleteIcon from '@mui/icons-material/Delete';\nimport EditIcon from '@mui/icons-material/Edit';\nimport { Paper } from '@mui/material';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport Modal from '@mui/material/Modal';\nimport { styled } from '@mui/material/styles';\nimport Typography from '@mui/material/Typography';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\n\nimport UpdateContact from 'components/UpdateContact/UpdateContact';\n\nconst style = {\n  position: 'absolute',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  width: 400,\n  bgcolor: 'background.paper',\n  border: '2px solid #000',\n  boxShadow: 24,\n  p: 4,\n};\nconst ContactItem = ({ name, number, id, onDeleteContacts }) => {\n  const [open, setOpen] = React.useState(false);\n  const handleOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n\n  const Item = styled(Paper)(({ theme }) => ({\n    backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\n    ...theme.typography.body2,\n    padding: theme.spacing(1),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  }));\n  return (\n    <>\n      <Item\n        component=\"li\"\n        sx={{\n          listStyle: 'none',\n          display: 'flex',\n          justifyContent: 'space-between',\n          padding: 2,\n          alignItems: 'center',\n          color: 'black',\n        }}\n      >\n        <Box\n          sx={{\n            minWidth: 100,\n            maxWidth: 170,\n            textAlign: 'center',\n            alignItems: 'center',\n          }}\n        >\n          <Typography\n            variant=\"body1\"\n            component=\"h2\"\n            sx={{ overflow: 'hidden' }}\n          >\n            {name}:\n          </Typography>\n          <Typography\n            variant=\"body1\"\n            component=\"h2\"\n            sx={{ overflow: 'hidden' }}\n          >\n            {number}\n          </Typography>\n        </Box>\n        <Box sx={{ display: 'flex' }}>\n          <Box sx={{ marginRight: 1 }}>\n            <Button variant=\"outlined\" onClick={handleOpen}>\n              <EditIcon />\n            </Button>\n            <Modal open={open} onClose={handleClose}>\n              <Box sx={style}>\n                <UpdateContact\n                  id={id}\n                  changeModal={setOpen}\n                  UserName={name}\n                  UserNumber={number}\n                />\n              </Box>\n            </Modal>\n          </Box>\n          <Button\n            variant=\"outlined\"\n            onClick={() => onDeleteContacts(id)}\n            startIcon={<DeleteIcon />}\n          >\n            Delete\n          </Button>\n        </Box>\n      </Item>\n    </>\n  );\n};\n\nContactItem.propTypes = {\n  id: PropTypes.any,\n  name: PropTypes.string,\n  number: PropTypes.string,\n  onDeleteContacts: PropTypes.func,\n};\n\nexport default ContactItem;\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  padding: 0 15px;\n  width: 360px;\n`;\n","import PropTypes from 'prop-types';\nimport ContactItem from 'components/ContactItem/ContactItem';\nimport { List } from './ContactList.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  getItemsValueState,\n  getFilterValueState,\n} from 'redux/contacts/contactsSelectors';\nimport * as operations from 'redux/contacts/contactsOperations';\nimport { useEffect } from 'react';\n\nconst ContactList = () => {\n  const contacts = useSelector(getItemsValueState);\n  const filter = useSelector(getFilterValueState);\n\n  const dispatch = useDispatch();\n  const deleteContacts = contactsId => {\n    dispatch(operations.deleteContact(contactsId));\n  };\n\n  useEffect(() => {\n    dispatch(operations.fetchContact());\n  }, [dispatch]);\n\n  console.log(contacts);\n\n  // Возвращает результат фильтра\n  const filterContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  const visibleContacts = filterContacts();\n\n  return (\n    <List>\n      {visibleContacts &&\n        visibleContacts.map(({ id, name, number }) => (\n          <ContactItem\n            key={id}\n            id={id}\n            name={name}\n            number={number}\n            onDeleteContacts={deleteContacts}\n          />\n        ))}\n    </List>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      phone: PropTypes.string.isRequired,\n    })\n  ),\n  onDeleteContact: PropTypes.func,\n};\n\nexport default ContactList;\n","import styled from '@emotion/styled';\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 10px;\n  margin-left: 15px;\n`;\n\nexport const Input = styled.input`\n  width: 200px;\n  margin-top: 5px;\n  outline: none;\n  height: 15px;\n  padding: 2.5px;\n  &:hover,\n  &:focus {\n    border-color: #4b0082;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getFilterValueState } from 'redux/contacts/contactsSelectors';\nimport { Input, Label } from './Filter.styled';\nimport * as actions from '../../redux/contacts/contactsActions';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(getFilterValueState);\n\n  const handleFilter = event => {\n    dispatch(actions.handleFilter(event.currentTarget.value));\n  };\n\n  return (\n    <Label>\n      Find contacts by name\n      <Input type=\"text\" name=\"filter\" value={filter} onChange={handleFilter} />\n    </Label>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n\nexport default Filter;\n","// import { ContactForm, ContactList, Filter } from 'components';\n\nconst { ContactForm } = require('components/ContactForm');\nconst { default: ContactList } = require('components/ContactList');\nconst { default: Filter } = require('components/Filter');\n\nconst ContactsPage = () => {\n  return (\n    <>\n      Phonebook\n      <ContactForm />\n      <>Contacts</>\n      <Filter />\n      <ContactList />\n    </>\n  );\n};\n\nexport default ContactsPage;\n","const getItemsValueState = state => state.contacts.items;\nconst getFilterValueState = state => state.contacts.filter;\n\nexport { getItemsValueState, getFilterValueState };\n"],"names":["Form","styled","Label","Input","Button","ContactForm","useState","name","setName","number","setNumber","contacts","useSelector","getItemsValueState","dispatch","useDispatch","handleChange","event","currentTarget","value","reset","onSubmit","preventDefault","find","contact","toLowerCase","Notify","operations","addContacts","autoComplete","type","onChange","pattern","title","required","porTypes","PropTypes","id","changeModal","UserName","UserNumber","Box","component","trim","updateContact","sx","display","flexDirection","padding","Typography","variant","mb","TextField","label","mt","style","position","top","left","transform","width","bgcolor","border","boxShadow","p","onDeleteContacts","React","open","setOpen","Item","Paper","theme","backgroundColor","palette","mode","typography","body2","spacing","textAlign","color","text","secondary","listStyle","justifyContent","alignItems","minWidth","maxWidth","overflow","marginRight","onClick","Edit","Modal","onClose","startIcon","Delete","List","filter","getFilterValueState","deleteContacts","contactsId","useEffect","console","log","visibleContacts","normalizedFilter","includes","filterContacts","map","actions","require","ContactList","default","Filter","state","items"],"sourceRoot":""}