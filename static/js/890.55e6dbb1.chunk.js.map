{"version":3,"file":"static/js/890.55e6dbb1.chunk.js","mappings":"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","sources":["redux/contacts/contactsSelectors.js","components/ContactForm/ContactForm.jsx","pages/ContactsPage/ContactsPage.jsx","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js"],"sourcesContent":["const getItemsValueState = state => state.contacts.items;\nconst getFilterValueState = state => state.contacts.filter;\n\nexport { getItemsValueState, getFilterValueState };\n","import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getItemsValueState } from 'redux/contacts/contactsSelectors';\nimport * as operations from 'redux/contacts/contactsOperations';\nimport { Button, Box, TextField } from '@mui/material';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const contacts = useSelector(getItemsValueState);\n  const dispatch = useDispatch();\n\n  const handleChange = event => {\n    const { name, value } = event.currentTarget;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const addContacts = ({ name, number }) => {\n    const findName = contacts.find(\n      contact => contact.name.toLowerCase() === name.toLowerCase()\n    );\n    if (findName) {\n      Notify.failure(`${name} is already in contacts.`);\n    }\n    const findNumber = contacts.find(contact => contact.number === number);\n    if (findNumber) {\n      Notify.failure(`${number} number is already in use.`);\n    } else {\n      return dispatch(operations.addContact({ name, number }));\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    reset();\n\n    return addContacts({ name, number });\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <>\n      <Box\n        component=\"form\"\n        onSubmit={handleSubmit}\n        sx={{\n          display: 'flex',\n          flexDirection: 'column',\n          padding: '15px',\n        }}\n      >\n        <TextField\n          type=\"text\"\n          name=\"name\"\n          label=\"Name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          onChange={handleChange}\n          value={name}\n          variant=\"outlined\"\n          autoComplete=\"off\"\n        />\n        <TextField\n          type=\"tel\"\n          name=\"number\"\n          label=\"Number\"\n          onChange={handleChange}\n          // pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\n          title=\"The phone number must be 13 digits long and may contain numbers, spaces, dashes, paunches, and may begin with +\"\n          value={number}\n          variant=\"outlined\"\n          sx={{ mb: 2, mt: 2 }}\n          autoComplete=\"off\"\n        />\n        <Button type=\"submit\" variant=\"contained\">\n          Add contact\n        </Button>\n      </Box>\n    </>\n  );\n};\n\nContactForm.porTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default ContactForm;\n","import { Box, Typography } from '@mui/material';\n\nconst { ContactForm } = require('components/ContactForm');\n// const { default: ContactList } = require('components/ContactList');\n// const { default: Filter } = require('components/Filter');\n\nconst ContactsPage = () => {\n  return (\n    <>\n      <Box sx={{ mb: 5 }}>\n        <Typography variant=\"h6\" component=\"h2\">\n          Phonebook\n        </Typography>\n        <ContactForm />\n      </Box>\n      <Typography variant=\"h6\" component=\"h2\">\n        <>Contacts</>\n      </Typography>\n      {/* <Filter />\n      <ContactList /> */}\n    </>\n  );\n};\n\nexport default ContactsPage;\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n"],"names":["getItemsValueState","state","contacts","items","ContactForm","useState","name","setName","number","setNumber","useSelector","dispatch","useDispatch","handleChange","event","currentTarget","value","reset","Box","component","onSubmit","preventDefault","find","contact","toLowerCase","Notify","operations","addContacts","sx","display","flexDirection","padding","TextField","type","label","pattern","title","onChange","variant","autoComplete","mb","mt","Button","porTypes","PropTypes","require","Typography","ReactPropTypesSecret","emptyFunction","emptyFunctionWithReset","resetWarningCache","module","exports","shim","props","propName","componentName","location","propFullName","secret","err","Error","getShim","isRequired","ReactPropTypes","array","bigint","bool","func","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes"],"sourceRoot":""}